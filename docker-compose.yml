version: '3.8'
volumes:
  pg_data:
  tg_pg_data:
  static:
services:
  db:
    image: postgres:16.2-alpine
    env_file:
      - backend/.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  telegram_db:
    image: postgres:16.2-alpine
    env_file:
      - telegram_client/.env
    volumes:
      - tg_pg_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_TG_DB} -U $${POSTGRES_TG_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - backend/.env
    volumes:
      - static:/backend_static
    depends_on:
      db:
        condition: service_healthy
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    volumes:
      - static:/staticfiles/
    ports:
      - 8000:8000
    depends_on:
      - backend
  telegram_client:
    build:
      context: .
      dockerfile: telegram_client/Dockerfile
    env_file:
      - telegram_client/.env
    depends_on:
      telegram_db:
        condition: service_healthy
      nginx:
        condition: service_started